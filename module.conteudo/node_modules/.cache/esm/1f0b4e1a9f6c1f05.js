let express,bodyParser,graphqlHttp,routes,schema;_9f6‍.x([["default",()=>_9f6‍.o]]);_9f6‍.w("express",[["default",["express"],function(v){express=v}]]);_9f6‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_9f6‍.w("express-graphql",[["default",["graphqlHttp"],function(v){graphqlHttp=v}]]);_9f6‍.w("./routes",[["default",["routes"],function(v){routes=v}]]);_9f6‍.w("./app/graphql",[["default",["schema"],function(v){schema=v}]]);





class AppController {
  constructor() {
    this.express = express();
    this.middlewares();
    this.routes();
  }

  middlewares() {
    this.express.use(bodyParser.json());
    this.express.use(
      graphqlHttp({
        schema,
        graphiql: !!process.env.GRAPHIQL || false,
      })
    );
  }

  routes() {
    this.express.use(routes);
  }
}

_9f6‍.d(new AppController().express);
